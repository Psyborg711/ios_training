{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33100\viewh20140\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 MVC = Model View Controller\
	1). It is the foundation of the 3 patterns\
	2) Gives guidelines to manage the models, views or controllers in a GUI.  This foundation was designed to segregate and isolate these guidelines.\
		a) The model basically represents business logic such as business data or services\
		b) The View is basically visual portion of the solution\
		c) The Controller is a kind of mediator that goes between the view and models\
\
MVVM = Model View, View Model\
	1) This was developed by Microsoft and as you can see, it is missing the Controller.\
	2) This type requires a binder for instance between the View Model and the View.\
	3) In Microsoft you could use XAML to bind with the view model but it is missing in the UIKIT, you can use simple bindings and closures\
\
MVP = Model View Presenter\
	1) It is another mediator between the View and the Model\
	2) The Presenter is responsible for formatting the User Interface and it has a reference to the View  \
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 	The MVC (Model View Controller) is the foundation of the 3 patterns mentioned in this article.  It gives guidelines to manage the models, views or controllers in a GUI.   This foundation was designed to segregate and isolate these guidelines.\
The model basically represents business logic such as business data or services.  The View is basically visual portion of the solution.  The Controller is a kind of mediator that goes between the view and models\
\
	The MVVM (Model View, View Model) was developed by Microsoft and as you can see, it is missing the Controller.  This type requires a binder for instance between the View Model and the View.\
In Microsoft you could use XAML to bind with the view model but it is missing in the UIKIT, you can use simple bindings and closures.\
\
	The MVP (Model View Presenter) is another mediator between the View and the Model.  The Presenter is responsible for formatting the User Interface and it has a reference to the View  }